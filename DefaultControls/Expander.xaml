<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    mc:Ignorable="d">

    <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto" />

                            </Grid.ColumnDefinitions>
                            <StackPanel Orientation="Horizontal">
                            <Rectangle x:Name="Rectangle" Margin="0,0,0,0" Grid.Column="0" Height="Auto" Width="5" VerticalAlignment="Stretch" HorizontalAlignment="Left" Fill="{DynamicResource ScrollBarBrush}" Visibility="Hidden"/>
                            <ContentPresenter Grid.Column="0" Margin="8,0,0,0" VerticalAlignment="Center"
                                              SnapsToDevicePixels="True" RecognizesAccessKey="True"  />
                            </StackPanel>
                            <TextBlock Text="&#x25BE;" x:Name="UpArrow"
                                       VerticalAlignment="Center" HorizontalAlignment="Center"
                                       Style="{DynamicResource BaseTextBlockStyle}" 
                                       Foreground="{DynamicResource GlyphBrush}" FontSize="18" MinWidth="20" FontWeight="Bold" Margin="5,0"
                                       Grid.Column="1" TextAlignment="Center" FontFamily="{DynamicResource SymbolFont}" Padding="0" UseLayoutRounding="True" />
                            <TextBlock Text="&#x25B4;" x:Name="DownArrow"
                                       VerticalAlignment="Center" HorizontalAlignment="Center"
                                       Style="{DynamicResource BaseTextBlockStyle}"
                                       Foreground="{DynamicResource ScrollBarBrush}" FontSize="18" MinWidth="20" FontWeight="Bold" Margin="5,0,5,2"
                                       Visibility="Collapsed"
                                       Grid.Column="1" TextAlignment="Center" FontFamily="{DynamicResource SymbolFont}" Padding="0" ScrollViewer.CanContentScroll="True"/>

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="DownArrow" Value="Visible" />
                            <Setter Property="Visibility" TargetName="Rectangle" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="UpArrow" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="1" />
                            <Setter Property="Visibility" TargetName="Rectangle" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Expander}">
        <Setter Property="Background" Value="{DynamicResource ExpanderBackgroundBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <DockPanel>
                        <ToggleButton BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                      Style="{DynamicResource ExpanderDownHeaderStyle}"
                                      Padding="{TemplateBinding Padding}"
                                      MinHeight="25" DockPanel.Dock="Top"
                                      Background="{TemplateBinding Background}"
                                      Content="{TemplateBinding Header}"
                                      IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        <Border x:Name="Border" DockPanel.Dock="Top" Visibility="Collapsed"
                                BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"  />
                        </Border>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter Property="Visibility" TargetName="Border" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>